06.09
/*
javascript, jquery를 학습해야 하는 이유
CSS와 HTML은 정적인 문서이다.
화면에 데이터를 표출하거나 데이터를 변경할 때
javascript나 jquery를 써줘야 한다.
*/

1. Jquery란
    - 자바스크립트로 DOM객체를 조작하는 것을 편하게 해주는 라이브러리
    - document.getElementById('아이디') -> $('#아이디')
    - 장점 : 길었던 자바스크립트 코드를 단축시킬 수 있다.
    - Jquery 라이브러리에 다양한 함수들이 내장되어 있어
      효과나 애니메이션을 구현하는 데 훨씬 간편하다.
    - <script type="text/javascript" src="jquery경로">
--_01_start_jquery.html

2. Jquery 직접 선택자
    - 전체선택자 : $("*")
    - 아이디 선택자 : $("#아이디")
    - 클래스 선택자 : $(".클래스")
    - 태그 선택자 : $("태그명")
    - 그룹 선택자 : $("선택1, 선택2, 선택3 ......")
                   선택1, 2, 3 에는 아이디나 클래스 태그 등 다양한 선택자 가능
                   ($와 괄호 붙는것 외에는 css선택자와 동일하게 사용)
--_02_selector001.html

3. 체이닝 기법
    - 체이닝 기법은 메소드를 연결해서 사용하는 기법
    ex) 선택자.css('속성1', '속성1값')
              .css('속성2', '속성2값')
              ......
    - 마치 체인을 엮어놓은 듯한 모양이라 체이닝 기법이라 함
--_03-2_chainning.html

4. Jquery 관계 선택자
    - $("요소선택").parent() : 지정한 요소의 부모 요소 선택
    - $("기준요소 선택요소"): 기준요소의 자손(선택요소) 선택
    - $("요소선택").children(), $("기준요소>선택요소") : 지정한 요소의 모든 자식요소 선택
    - $("요소선택").children("특정요소") : 지정한 요소의 특정한 자식요소 선택
--_04_parent_selector.html
--_05_grand_selector.html
--_06_children_selector copy.html
    - $("요소선택").prev() : 선택한 요소의 형제요소 중 바로 앞의 요소 선택
--_07_oldbrother.html
    - $("요소선택").next() : 선택한 요소의 형제 요소 중 바로 다음 요소 선택
--_07-2_oldbrother copy.html
    - $("요소선택").siblings() : 선택한 요소의 모든 형제 요소 선택 (자기 자신은 빼고)

5. Jquery 탐색 선택자
    - first : 선택된 요소 중 첫 번째 요소 선택
      1) $("요소선택").first()
      2) $("요소선택:first")
    - last ; 선택된 요소 중 마지막 요소 선택
      1) $("요소선택").last()
      2) $("요소선택:last")
--_09_first_last_selector.html
    - eq : 선택된 요소 중 지정한 인덱스 번째의 요소만 선택
      1) $("요소선택").eq(index)
      2) $("요소선택:eq(index))
--_10_eq_selector.html

6. Jquery 속성 탐색 선택자
    - $("요소선택[속성]") : 해당 속성이 있는 요소만 선택
    - $("요소선택[속성=속성값]") : 해당 속성의 속성값이 동일한 요소만 선택
_11_attribute_selector001.html
    - $(:selected) : 드롭다운 목록 중 selected 된 요소만 선택
    - $(:checked) : 체크박스나 라디오버튼 중 checked 된 요소만 선택

7. 선택자와 함께 사용하면 편리한 함수들
    - is() : ex) $("chk1").is(":checked) -> check돼있으면 true 리턴
                                            check돼있지 않으면 false 리턴
             선택한 요소의 상태를 확인 할 수 있는 메소드
    - each() : 선택한 요소들을 순차적으로 선택
                ex-1) $("li").each(function(){

                      });
                ex-2) $.each($("li"), function(){

                      });
